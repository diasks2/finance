<% provide(:title, 'Home') %>

<h1 class="center">Personal Finance App</h1>
<br>
<h2 class="center">Networth (¥)</h2>
<div id="chart3"></div>
<br>
<h2 class="center">Expense by Category</h2>
<div id="chart1">
  <div class="vis-tool-tip" id="chart1_tool_tip">
    <div id="vis-tool-tip-title1"></div> 
  </div>
</div>
<br>
<table class="table">
 <thead>
    <tr>
      <th>Name</th>
      <th>Group</th>
      <th>¥ Total</th>
      <th>$ Total</th>
      <th>Converted Total</th>
    </tr>
  </thead>
  <tbody>
    <% @categories.each do |c| %>
      <tr>
        <td><%= link_to c.name, c %></td>
        <td><%= c.group.name %></td>
        <td><%= number_to_currency(category_yen_total(c.id), :unit => "¥", :precision => 0) %></td>
        <td><%= number_to_currency(category_dollar_total(c.id)) %></td>
        <td><%= number_to_currency(category_converted_total(c.id), :unit => "¥", :precision => 0) %></td>
      </tr>
  <% end %>      
  </tbody>
</table>
<br>
<h2 class="center">Expense by Group</h2>
<div id="chart2">
  <div class="vis-tool-tip" id="chart2_tool_tip">
    <div id="vis-tool-tip-title2"></div> 
  </div>
</div>
<br>
<table class="table">
 <thead>
    <tr>
      <th>Name</th>
      <th>¥ Total</th>
      <th>$ Total</th>
      <th>Converted Total</th>
    </tr>
  </thead>
  <tbody>
    <% @groups.each do |g| %>
      <tr>
        <td><%= link_to g.name, g %></td>
        <td><%= number_to_currency(group_yen_total(g.id), :unit => "¥", :precision => 0) %></td>
        <td><%= number_to_currency(group_dollar_total(g.id)) %></td>
        <td><%= number_to_currency(group_converted_total(g.id), :unit => "¥", :precision => 0) %></td>
      </tr>
    <% end %>      
  </tbody>
</table>

<script>
var url1 = '/graph1.json';
var url2 = '/graph2.json';
var url3 = '/networth.json';

var width = 960,
    height = 400,
    radius = Math.min(width, height) / 2;

var arc = d3.svg.arc()
    .outerRadius(radius - 10)
    .innerRadius(radius - 70);

var pie = d3.layout.pie()
    .value(function(d) { return d.amount; });

var svg = d3.select("#chart1").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

d3.json(url1, function(error, data) {
  var arr = new Array();
  data.forEach(function(d) {
    d.amount = +d.amount;
    arr.push(d.amount);
  });

  var min = Math.min.apply(null, arr);
  var max = Math.max.apply(null, arr);

  var color = d3.scale.linear()
    .domain([min, max])
    .interpolate(d3.interpolateHsl)
    .range(["#f2d1f5","#9911a5"]);

  var g = svg.selectAll(".arc")
      .data(pie(data))
    .enter().append("g")
      .attr("class", "arc")
      .on("mouseover", mover)
      .on("mouseout", mout);

  g.append("path")
      .attr("d", arc)
      .style("fill", function(d) { return color(d.data.amount); });

  function mover(d) {
    $("#chart1_tool_tip").fadeOut(100,function () {
      $("#vis-tool-tip-title1").html(d.data.category.name);  
      $("#chart1_tool_tip").fadeIn(100);
    });
  }

  function mout(d) {
    $("#chart1_tool_tip").fadeOut(50);
  }

});

var svg2 = d3.select("#chart2").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

d3.json(url2, function(error, data) {
  var arr = new Array();
  data.forEach(function(d) {
    arr.push(d.amount);
    d.amount = +d.amount;
  });

  var min = Math.min.apply(null, arr);
  var max = Math.max.apply(null, arr);

  var color2 = d3.scale.linear()
    .domain([min, max])
    .interpolate(d3.interpolateHsl)
    .range(["#c0c3ca","#386df4"]);

  var g = svg2.selectAll(".arc")
      .data(pie(data))
    .enter().append("g")
      .attr("class", "arc")
      .on("mouseover", mover)
      .on("mouseout", mout);

  g.append("path")
      .attr("d", arc)
      .style("fill", function(d) { return color2(d.data.amount); });

  function mover(d) {
    $("#chart2_tool_tip").fadeOut(100,function () {
      $("#vis-tool-tip-title2").html(d.data.name);  
      $("#chart2_tool_tip").fadeIn(100);
    });
  }

  function mout(d) {
    $("#chart2_tool_tip").fadeOut(50);
}

});

var margin = {top: 20, right: 90, bottom: 30, left: 90},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var parseDate = d3.time.format("%d-%b-%y").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.networth); });

var svg3 = d3.select("#chart3").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.json(url3, function(error, data) {
  data.forEach(function(d) {
    d.date = parseDate(d.date);
    d.networth = +d.networth;
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));
  y.domain(d3.extent(data, function(d) { return d.networth; }));

  svg3.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg3.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Networth (¥)");

  svg3.append("path")
      .datum(data)
      .attr("class", "line")
      .attr("d", line);
});

</script>